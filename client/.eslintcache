[{"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\index.js":"1","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\App.js":"2","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Header\\index.js":"4","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\index.js":"5","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Home\\index.js":"6","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Developers\\index.js":"7","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignIn\\index.js":"8","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Main\\index.js":"9","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignUp\\index.js":"10","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\customHooks\\useForm.js":"11","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\store.js":"12","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\index.js":"13","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Alert\\index.js":"14","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\authReducer.js":"15","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\authConstants.js":"16","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\authAction.js":"17","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\util\\setAuthToken.js":"18","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Loading\\index.js":"19","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PrivateRoute.js":"20","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Dashboard\\index.js":"21","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\CreatePost\\index.js":"22","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingScreen\\index.js":"23","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\profileReducer.js":"24","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\profileConstants.js":"25","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\profileAction.js":"26","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PublicRoute.js":"27","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Profile\\index.js":"28","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileHeader\\index.js":"29","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileDetails\\index.js":"30","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditProfile\\index.js":"31","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EditProfileDetails\\index.js":"32","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewExperience\\index.js":"33","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewEducation\\index.js":"34","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\postReducer.js":"35","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\postConstants.js":"36","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\postAction.js":"37","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Posts\\index.js":"38","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\uiStateAction.js":"39","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\uiStateConstants.js":"40","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\uiStateReducer.js":"41","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\PostDetails\\index.js":"42","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostDetailsFooter\\index.js":"43","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostComments\\index.js":"44","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostLikes\\index.js":"45","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\DeleteDialog\\index.js":"46","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\AboutTheAuthor\\index.js":"47","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditPost\\index.js":"48"},{"size":500,"mtime":1608862841737,"results":"49","hashOfConfig":"50"},{"size":857,"mtime":1610253670019,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1607648565038,"results":"52","hashOfConfig":"50"},{"size":4026,"mtime":1611845249902,"results":"53","hashOfConfig":"50"},{"size":1773,"mtime":1611501666642,"results":"54","hashOfConfig":"50"},{"size":1233,"mtime":1611846198575,"results":"55","hashOfConfig":"50"},{"size":458,"mtime":1610940998336,"results":"56","hashOfConfig":"50"},{"size":2685,"mtime":1611845981352,"results":"57","hashOfConfig":"50"},{"size":237,"mtime":1611125716607,"results":"58","hashOfConfig":"50"},{"size":3953,"mtime":1611845985399,"results":"59","hashOfConfig":"50"},{"size":367,"mtime":1610946418764,"results":"60","hashOfConfig":"50"},{"size":399,"mtime":1609226384912,"results":"61","hashOfConfig":"50"},{"size":363,"mtime":1610940073581,"results":"62","hashOfConfig":"50"},{"size":604,"mtime":1610940248964,"results":"63","hashOfConfig":"50"},{"size":1203,"mtime":1611142137269,"results":"64","hashOfConfig":"50"},{"size":205,"mtime":1611142096183,"results":"65","hashOfConfig":"50"},{"size":2253,"mtime":1611142078034,"results":"66","hashOfConfig":"50"},{"size":253,"mtime":1609482015721,"results":"67","hashOfConfig":"50"},{"size":580,"mtime":1611143537130,"results":"68","hashOfConfig":"50"},{"size":786,"mtime":1610808847442,"results":"69","hashOfConfig":"50"},{"size":2051,"mtime":1611310080770,"results":"70","hashOfConfig":"50"},{"size":2870,"mtime":1611376141646,"results":"71","hashOfConfig":"50"},{"size":464,"mtime":1610081310821,"results":"72","hashOfConfig":"50"},{"size":1467,"mtime":1610517498395,"results":"73","hashOfConfig":"50"},{"size":406,"mtime":1610515521247,"results":"74","hashOfConfig":"50"},{"size":3842,"mtime":1611311238442,"results":"75","hashOfConfig":"50"},{"size":798,"mtime":1610808842797,"results":"76","hashOfConfig":"50"},{"size":1237,"mtime":1611310218932,"results":"77","hashOfConfig":"50"},{"size":2039,"mtime":1611367702989,"results":"78","hashOfConfig":"50"},{"size":8806,"mtime":1610807989673,"results":"79","hashOfConfig":"50"},{"size":2792,"mtime":1611310101395,"results":"80","hashOfConfig":"50"},{"size":6325,"mtime":1610803395872,"results":"81","hashOfConfig":"50"},{"size":3884,"mtime":1610804926743,"results":"82","hashOfConfig":"50"},{"size":3555,"mtime":1610804920378,"results":"83","hashOfConfig":"50"},{"size":1638,"mtime":1611143006225,"results":"84","hashOfConfig":"50"},{"size":439,"mtime":1611142984600,"results":"85","hashOfConfig":"50"},{"size":5823,"mtime":1611822229955,"results":"86","hashOfConfig":"50"},{"size":2881,"mtime":1611582468486,"results":"87","hashOfConfig":"50"},{"size":365,"mtime":1610940337592,"results":"88","hashOfConfig":"50"},{"size":133,"mtime":1610940343998,"results":"89","hashOfConfig":"50"},{"size":809,"mtime":1610940764527,"results":"90","hashOfConfig":"50"},{"size":3355,"mtime":1611822625566,"results":"91","hashOfConfig":"50"},{"size":1696,"mtime":1611117499291,"results":"92","hashOfConfig":"50"},{"size":8861,"mtime":1611822247993,"results":"93","hashOfConfig":"50"},{"size":2591,"mtime":1611124885119,"results":"94","hashOfConfig":"50"},{"size":612,"mtime":1611501039964,"results":"95","hashOfConfig":"50"},{"size":2108,"mtime":1611375388122,"results":"96","hashOfConfig":"50"},{"size":3689,"mtime":1611498779253,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1cjo7jk",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"100"},"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\index.js",[],["213","214"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\App.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Home\\index.js",["215"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Developers\\index.js",["216"],"import React, { useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Developers = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Developers'));\r\n  }, []);\r\n\r\n  return (\r\n    <Main>\r\n      <h1>Developers Page</h1>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Developers;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignIn\\index.js",["217"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Main\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignUp\\index.js",["218"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\customHooks\\useForm.js",["219"],"import e from 'cors';\r\nimport { useState } from 'react';\r\n\r\n// handle form fields dynamically\r\nconst useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  return [\r\n    values,\r\n    (e) => {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\store.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Alert\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\authReducer.js",["220"],"import {\r\n  AUTH_BEGIN,\r\n  AUTH_END,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  USER_LOADED,\r\n} from '../constants/authConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  userDetails: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case AUTH_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case AUTH_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userDetails: payload.userData,\r\n      };\r\n    case AUTH_SUCCESS:\r\n      localStorage.setItem('token', payload.userToken);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userDetails: payload.userDetails,\r\n      };\r\n    case AUTH_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: null,\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\authConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\authAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\util\\setAuthToken.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Loading\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Dashboard\\index.js",["221"],"import React, { useEffect } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport Main from '../../components/Main';\r\nimport Posts from '../../components/Posts';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\nimport { getAllPosts } from '../../actions/postAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Dashboard = (props) => {\r\n  const { history } = props;\r\n  const { profileDetails, loading: profileLoading } = useSelector(\r\n    (state) => state.profile\r\n  );\r\n  const { posts, loading: postLoading } = useSelector((state) => state.post);\r\n  const { userDetails } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Dashboard'));\r\n    dispatch(getCurrentProfile());\r\n    dispatch(getAllPosts());\r\n  }, []);\r\n\r\n  return profileLoading || postLoading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      <h1>Dashboard</h1>\r\n      {!profileDetails ? (\r\n        <Card>\r\n          <Card.Body>\r\n            <p className='lead'>\r\n              Welcome,{' '}\r\n              {userDetails &&\r\n                `${userDetails.firstname} ${userDetails.lastname}`}\r\n            </p>\r\n            <p>\r\n              Looks like that you didn't setup your profile yet. Edit your\r\n              profile to get recognized.\r\n            </p>\r\n            <Button href='/edit-profile'>Edit Profile</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <Button\r\n          title='Write a Post'\r\n          className='float-right write-post-btn'\r\n          variant='outline-primary'\r\n          href='/create-post'\r\n        >\r\n          Write a Post\r\n        </Button>\r\n      )}\r\n      {posts && (\r\n        <Posts posts={posts} userDetails={userDetails} history={history} />\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\CreatePost\\index.js",["222"],"import React, { useState } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport AlertDismissable from '../../components/Alert';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savePost } from '../../actions/postAction';\r\n\r\nconst CreatePost = (props) => {\r\n  const { history } = props;\r\n  const [title, handleTitle] = useState('');\r\n  const [content, handleContent] = useState((content, editor) => content);\r\n\r\n  const { loading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const thumbnail = document\r\n      .querySelector('#preview img')\r\n      .getAttribute('src');\r\n    const postData = {\r\n      title,\r\n      content,\r\n      thumbnail,\r\n    };\r\n\r\n    dispatch(savePost(postData, history));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      <AlertDismissable />\r\n      <h1>Write a Post</h1>\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Button type='submit' className='float-right publish-post-btn'>\r\n          Publish Post\r\n        </Button>\r\n        <Form.Group className='mt-5'>\r\n          <Form.Control\r\n            className='post-title-textarea'\r\n            name='title'\r\n            as='textarea'\r\n            placeholder='Title'\r\n            value={title}\r\n            onChange={(e) => handleTitle(e.target.value)}\r\n            required={true}\r\n          />\r\n        </Form.Group>\r\n        <Editor\r\n          apiKey='d01fggzhnl8ykqa0mv3t83mdkkw8f4j5aj305lr5it0pvjck'\r\n          initialValue={content}\r\n          init={{\r\n            placeholder: 'What do you have in mind?',\r\n            selector: 'textarea',\r\n            resize: false,\r\n            height: 500,\r\n            menubar: false,\r\n            toolbar_mode: 'floating',\r\n            toolbar_location: 'bottom',\r\n            skin: 'outside',\r\n            plugins: [\r\n              'advlist autolink lists link image charmap print preview anchor',\r\n              'searchreplace visualblocks code fullscreen',\r\n              'insertdatetime media table paste code help wordcount',\r\n            ],\r\n            toolbar:\r\n              'undo redo | formatselect | bold italic backcolor | link image | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n          }}\r\n          onEditorChange={(e) => handleContent(e)}\r\n        />\r\n      </Form>\r\n      <div\r\n        style={{ display: 'none' }}\r\n        id='preview'\r\n        dangerouslySetInnerHTML={{ __html: content }}\r\n      />\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingScreen\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\profileReducer.js",["223"],"import {\r\n  PROFILE_BEGIN,\r\n  PROFILE_END,\r\n  PROFILE_DETAILS_SUCCESS,\r\n  PROFILES_SUCCESS,\r\n  REPOS_SUCCESS,\r\n  PROFILE_DETAILS_FAIL,\r\n  PROFILES_FAIL,\r\n  REPOS_FAIL,\r\n} from '../constants/profileConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  profileDetails: null,\r\n  profiles: null,\r\n  repos: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PROFILE_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case PROFILE_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case PROFILE_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profileDetails: payload.profileDetails,\r\n      };\r\n    case PROFILES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profiles: payload.profiles,\r\n      };\r\n    case REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repos: payload.repos,\r\n      };\r\n    case PROFILE_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profileDetails: null,\r\n      };\r\n    case PROFILES_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profiles: null,\r\n      };\r\n    case REPOS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repos: [],\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\profileConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\profileAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PublicRoute.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Profile\\index.js",["224"],"import React, { useEffect } from 'react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport ProfileDetails from '../../components/ProfileDetails';\r\nimport ProfileHeader from '../../components/ProfileHeader';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\n\r\nconst Profile = () => {\r\n  const { profileDetails, loading } = useSelector((state) => state.profile);\r\n  const { userDetails } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <React.Fragment>\r\n      {profileDetails && userDetails && (\r\n        <React.Fragment>\r\n          <div className='profile-bg'>\r\n            <ProfileHeader\r\n              profileDetails={profileDetails}\r\n              userDetails={userDetails}\r\n            />\r\n          </div>\r\n          <ProfileDetails\r\n            profileDetails={profileDetails}\r\n            userDetails={userDetails}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileHeader\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileDetails\\index.js",["225"],"import React, { useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardGroup,\r\n  Container,\r\n  ListGroup,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileDetails = (props) => {\r\n  const [key, setKey] = useState('#experience');\r\n\r\n  const { profileDetails, userDetails } = props;\r\n  const { experience, education, social } = profileDetails;\r\n\r\n  return (\r\n    <Container className='mt-2 mb-5'>\r\n      <Nav\r\n        className='justify-content-center profile-details-nav'\r\n        activeKey={key}\r\n        onSelect={(key) => setKey(key)}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#experience' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#experience'\r\n          >\r\n            Work Experience\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#education' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#education'\r\n          >\r\n            Education\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#socials' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#socials'\r\n          >\r\n            Socials and Contact Infos\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <div className='mt-5'>\r\n        {key === '#experience' && (\r\n          <React.Fragment>\r\n            <Button\r\n              title='Add Experience'\r\n              className='float-right'\r\n              variant='outline-primary'\r\n              href='/edit-profile#experience'\r\n            >\r\n              <i className='fa fa-plus fa-fw' />\r\n            </Button>\r\n            <h1>Work Experience</h1>\r\n            <ListGroup className='mt-5'>\r\n              {experience.map((item) => {\r\n                return (\r\n                  <Card key={item.id} className='mb-2'>\r\n                    <Card.Body>\r\n                      <div className='float-right'>\r\n                        <h5 className='text-right'>\r\n                          <Badge pill variant='primary' style={{ padding: 12 }}>\r\n                            {item.type}\r\n                          </Badge>\r\n                        </h5>\r\n                        <p className='text-muted'>\r\n                          <i className='fa fa-calendar fa-fw' />\r\n                          <Moment format='MM/DD/YY'>{item.from}</Moment> -{' '}\r\n                          {item.current && 'Current'}\r\n                          {item.to && (\r\n                            <Moment format='MM/DD/YY'>{item.to}</Moment>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <h3 className='mt-2'>{item.title}</h3>\r\n                      <div className='profile-details-subdetails'>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-building fa-fw' /> {item.company}\r\n                        </p>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-map-marker fa-fw' />{' '}\r\n                          {item.location}\r\n                        </p>\r\n                      </div>\r\n                      <p className='mt-2'>{item.description}</p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n        {key === '#education' && (\r\n          <React.Fragment>\r\n            <Button\r\n              title='Add Education'\r\n              className='float-right'\r\n              variant='outline-primary'\r\n              href='/edit-profile#education'\r\n            >\r\n              <i className='fa fa-plus fa-fw' />\r\n            </Button>\r\n            <h1>Education</h1>\r\n            <ListGroup className='mt-5'>\r\n              {education.map((item) => {\r\n                return (\r\n                  <Card key={item.id} className='mb-2'>\r\n                    <Card.Body>\r\n                      <h3 className='mt-2'>{item.fieldofstudy}</h3>\r\n                      <div className='profile-details-subdetails'>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-building fa-fw' /> {item.school}\r\n                        </p>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-graduation-cap fa-fw' />{' '}\r\n                          {item.degree}\r\n                        </p>\r\n                        <p className='text-muted'>\r\n                          <i className='fa fa-calendar fa-fw' />{' '}\r\n                          <Moment format='MM/DD/YY'>{item.from}</Moment> -{' '}\r\n                          {item.current && 'Current'}\r\n                          {item.to && (\r\n                            <Moment format='MM/DD/YY'>{item.to}</Moment>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <p className='mt-2'>{item.description}</p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n        {key === '#socials' && (\r\n          <React.Fragment>\r\n            <h1>Socials and Contact Infos</h1>\r\n            <ListGroup className='mt-3'>\r\n              {userDetails.email && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className='float-right'\r\n                    href={`mailto:${userDetails.email}`}\r\n                  >\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-envelope-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{userDetails.email}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.facebook && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.facebook}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-facebook-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.facebook}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.linkedin && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.linkedin}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-linkedin-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.linkedin}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.twitter && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.twitter}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-twitter-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.twitter}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.youtube && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.youtube}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-youtube-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.youtube}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditProfile\\index.js",["226","227"],"import React, { useState, useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Form, Button, Nav } from 'react-bootstrap';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\nimport EditProfileDetails from '../../components/EditProfileDetails';\r\nimport NewExperience from '../../components/NewExperience';\r\nimport NewEducation from '../../components/NewEducation';\r\n\r\nconst EditProfile = (props) => {\r\n  const { history } = props;\r\n  const { hash } = history.location;\r\n\r\n  const [key, setKey] = useState(hash);\r\n\r\n  const { profileDetails, loading } = useSelector((state) => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      {profileDetails && (\r\n        <React.Fragment>\r\n          <Button className='mb-3' href='/profile' variant='outline-primary'>\r\n            <i className='fa fa-chevron-left fa-fw' />\r\n            Back\r\n          </Button>\r\n          <Nav\r\n            className='profile-details-nav'\r\n            activeKey={key}\r\n            onSelect={(key) => setKey(key)}\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  key === '#profile-details'\r\n                    ? 'nav-active text-primary'\r\n                    : 'text-muted'\r\n                }\r\n                eventKey='#profile-details'\r\n              >\r\n                Profile Details\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  key === '#experience'\r\n                    ? 'nav-active text-primary'\r\n                    : 'text-muted'\r\n                }\r\n                eventKey='#experience'\r\n              >\r\n                Experience\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  key === '#education'\r\n                    ? 'nav-active text-primary'\r\n                    : 'text-muted'\r\n                }\r\n                eventKey='#education'\r\n              >\r\n                Education\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {key === '#profile-details' && (\r\n            <EditProfileDetails profileDetails={profileDetails} />\r\n          )}\r\n          {key === '#experience' && <NewExperience />}\r\n          {key === '#education' && <NewEducation />}\r\n        </React.Fragment>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EditProfileDetails\\index.js",["228"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProfile } from '../../actions/profileAction';\r\nimport AlertDismissable from '../Alert';\r\n\r\nconst EditProfileDetails = (props) => {\r\n  const { profileDetails } = props;\r\n  const [values, setValues] = useState({\r\n    location: '',\r\n    website: '',\r\n    company: '',\r\n    status: '',\r\n    bio: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    twitter: '',\r\n    youtube: '',\r\n  });\r\n\r\n  const {\r\n    location,\r\n    website,\r\n    company,\r\n    status,\r\n    bio,\r\n    skills,\r\n    githubusername,\r\n    facebook,\r\n    linkedin,\r\n    twitter,\r\n    youtube,\r\n  } = values;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      location: !profileDetails ? '' : profileDetails.location,\r\n      company: !profileDetails ? '' : profileDetails.company,\r\n      website: !profileDetails ? '' : profileDetails.website,\r\n      status: !profileDetails ? '' : profileDetails.status,\r\n      bio: !profileDetails ? '' : profileDetails.bio,\r\n      skills: !profileDetails ? '' : profileDetails.skills.join(', '),\r\n      githubusername: !profileDetails ? '' : profileDetails.githubusername,\r\n      facebook: !profileDetails ? '' : profileDetails.social.facebook,\r\n      linkedin: !profileDetails ? '' : profileDetails.social.linkedin,\r\n      twitter: !profileDetails ? '' : profileDetails.social.twitter,\r\n      youtube: !profileDetails ? '' : profileDetails.social.youtube,\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile(values));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className='mb-5 mt-5'>Edit Main Details</h1>\r\n      <AlertDismissable />\r\n      <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Group>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            name='location'\r\n            type='text'\r\n            value={location}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company</Form.Label>\r\n          <Form.Control\r\n            name='company'\r\n            type='text'\r\n            value={company}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Website</Form.Label>\r\n          <Form.Control\r\n            name='website'\r\n            type='text'\r\n            value={website}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Status</Form.Label>\r\n          <Form.Control\r\n            name='status'\r\n            type='text'\r\n            value={status}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Bio</Form.Label>\r\n          <Form.Control\r\n            name='bio'\r\n            as='textarea'\r\n            value={bio}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Skills</Form.Label>\r\n          <Form.Control\r\n            name='skills'\r\n            type='text'\r\n            value={skills}\r\n            onChange={handleChange}\r\n            // required={true}\r\n          />\r\n        </Form.Group>\r\n        <hr />\r\n        <h3 className='mb-3'>Socials</h3>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>https://github.com/</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Github username'\r\n              name='githubusername'\r\n              type='text'\r\n              value={githubusername}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-facebook-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Facebook account url'\r\n              name='facebook'\r\n              type='text'\r\n              value={facebook}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-linkedin-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter LinkedIn account url'\r\n              name='linkedin'\r\n              type='text'\r\n              value={linkedin}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-twitter-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Twitter account url'\r\n              name='twitter'\r\n              type='text'\r\n              value={twitter}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-youtube-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Youtube account url'\r\n              name='youtube'\r\n              type='text'\r\n              value={youtube}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Button variant='primary' type='submit'>\r\n          Save Changes\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditProfileDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewExperience\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewEducation\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\postReducer.js",["229"],"import {\r\n  POST_BEGIN,\r\n  POST_END,\r\n  COMMENT_BEGIN,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POSTS_SUCCESS,\r\n  POSTS_FAIL,\r\n  UPDATE_LIKE_SUCCESS,\r\n  COMMENT_SUCCESS,\r\n} from '../constants/postConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  commentLoading: false,\r\n  postDetails: null,\r\n  posts: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case POST_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case POST_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case COMMENT_BEGIN:\r\n      return {\r\n        ...state,\r\n        commentLoading: true,\r\n      };\r\n    case POST_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postDetails: payload.postDetails,\r\n      };\r\n    case POST_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postDetails: null,\r\n      };\r\n    case POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: payload.posts,\r\n      };\r\n    case POSTS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: [],\r\n      };\r\n    case UPDATE_LIKE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        postDetails: { ...state.postDetails, likes: payload.postLikes },\r\n      };\r\n    case COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        commentLoading: false,\r\n        postDetails: { ...state.postDetails, comments: payload.postComments },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\postConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\postAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Posts\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\uiStateAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\uiStateConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\uiStateReducer.js",["230"],"import {\r\n  ALERT_SET,\r\n  ALERT_HIDE,\r\n  GET_CURRENT_PAGE,\r\n} from '../constants/uiStateConstants';\r\n\r\nconst initialState = {\r\n  alertType: null,\r\n  alertMsg: '',\r\n  alertShow: false,\r\n  currentPage: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ALERT_SET:\r\n      return {\r\n        ...state,\r\n        alertType: payload.alertType,\r\n        alertMsg: payload.alertMsg,\r\n        alertShow: true,\r\n      };\r\n    case ALERT_HIDE:\r\n      return {\r\n        ...state,\r\n        alertType: null,\r\n        alertMsg: '',\r\n        alertShow: false,\r\n      };\r\n    case GET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: payload,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\PostDetails\\index.js",["231"],"import React, { useEffect, useState } from 'react';\r\nimport Main from '../../components/Main';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport { Button, NavDropdown, Image } from 'react-bootstrap';\r\nimport TimeAgo from 'react-timeago';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPostDetails, deletePost } from '../../actions/postAction';\r\nimport PostDetailsFooter from '../../components/PostDetailsFooter';\r\nimport AboutTheAuthor from '../../components/AboutTheAuthor';\r\nimport DeleteDialog from '../../components/DeleteDialog';\r\n\r\nconst PostDetails = (props) => {\r\n  const { history, match } = props;\r\n\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  const { postDetails, loading } = useSelector((state) => state.post);\r\n  const { userDetails } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostDetails(match.params.id));\r\n  }, []);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(match.params.id, history));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      {postDetails && userDetails && (\r\n        <React.Fragment>\r\n          {postDetails.user._id === userDetails._id && (\r\n            <React.Fragment>\r\n              <DeleteDialog\r\n                showDelete={showDelete}\r\n                setShowDelete={setShowDelete}\r\n                deleteMsg={'Are you sure you want to delete this post?'}\r\n                handleDelete={handleDelete}\r\n              />\r\n              <NavDropdown\r\n                alignRight\r\n                id='post-more-dropdown'\r\n                title={\r\n                  <Button variant='link' style={{ fontSize: 16 }}>\r\n                    <i className='fa fa-ellipsis-h fa-fw' />\r\n                  </Button>\r\n                }\r\n              >\r\n                <NavDropdown.Item>Bookmark this Post</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href={`/edit-post/${match.params.id}`}>\r\n                  Edit\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => setShowDelete(!showDelete)}>\r\n                  Delete\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </React.Fragment>\r\n          )}\r\n          <React.Fragment>\r\n            <h1>{postDetails.title}</h1>\r\n            <div className='post-user mt-2 mb-5'>\r\n              <Image src={postDetails.user.avatar} roundedCircle />\r\n              <p className='text-primary ml-2'>\r\n                <strong>\r\n                  {postDetails.user.firstname} {postDetails.user.lastname}\r\n                  <span className='ml-2 mr-2'>&bull;</span>\r\n                  <TimeAgo date={postDetails.date} />\r\n                </strong>\r\n              </p>\r\n            </div>\r\n            <div\r\n              className='post-content'\r\n              dangerouslySetInnerHTML={{ __html: postDetails.content }}\r\n            />\r\n          </React.Fragment>\r\n          <PostDetailsFooter\r\n            postDetails={postDetails}\r\n            userDetails={userDetails}\r\n          />\r\n          <hr />\r\n          <AboutTheAuthor user={postDetails.user} />\r\n        </React.Fragment>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostDetailsFooter\\index.js",["232","233","234"],"import React, { useEffect, useState } from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../actions/postAction';\r\nimport PostComments from '../PostComments';\r\nimport PostLikes from '../PostLikes';\r\n\r\nconst PostDetailsFooter = (props) => {\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const { postDetails, userDetails } = props;\r\n  const { _id, likes, comments } = postDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const hasLiked = likes.find((item) => item.user === userDetails._id)\r\n      ? true\r\n      : false;\r\n    setLiked(hasLiked);\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    if (liked) {\r\n      dispatch(unlikePost(_id));\r\n    } else {\r\n      dispatch(likePost(_id));\r\n    }\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PostLikes likes={likes} postId={_id} userDetails={userDetails} />\r\n      {/* Post Comment */}\r\n      <PostComments\r\n        postId={_id}\r\n        comments={comments}\r\n        userDetails={userDetails}\r\n      />\r\n      <ButtonGroup vertical className='post-footer-btn-group ml-3 mr-3 mt-5'>\r\n        <Button variant='link'>\r\n          {' '}\r\n          <i className='far fa-bookmark fa-fw fa-2x' />{' '}\r\n        </Button>\r\n        <Button variant='link'>\r\n          {/* {likes.length !== 0 && (\r\n                <span>\r\n                  {likes.length}{' '}\r\n                  {likes.length !== 1 ? 'Likes' : 'Like'}\r\n                </span>\r\n              )} */}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetailsFooter;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostComments\\index.js",["235"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport TimeAgo from 'react-timeago';\r\nimport Loading from '../Loading';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addComment,\r\n  deleteComment,\r\n  updateComment,\r\n} from '../../actions/postAction';\r\n\r\nconst PostComments = (props) => {\r\n  const { postId, comments, userDetails } = props;\r\n\r\n  const [commented, setCommented] = useState(false);\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [optionType, setOptionType] = useState({ currentView: '', id: null });\r\n  const [values, setValues] = useState({\r\n    newComment: '',\r\n    updatedComment: '',\r\n  });\r\n\r\n  const { newComment, updatedComment } = values;\r\n  const { currentView, id } = optionType;\r\n\r\n  const { commentLoading } = useSelector((state) => state.post);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const hasCommented = comments.find(\r\n      (item) => item.user._id === userDetails._id\r\n    )\r\n      ? true\r\n      : false;\r\n    setCommented(hasCommented);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOptions = (newOptionType, text) => {\r\n    setValues({\r\n      ...values,\r\n      updatedComment: text,\r\n    });\r\n    setOptionType(newOptionType);\r\n  };\r\n\r\n  const handleSubmit = (e, submitType) => {\r\n    e.preventDefault();\r\n\r\n    if (submitType === 'Add') {\r\n      dispatch(addComment(postId, { text: newComment }));\r\n    } else if (submitType === 'Update') {\r\n      dispatch(updateComment(postId, id, { text: updatedComment }));\r\n      handleOptions({\r\n        currentView: '',\r\n        id: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (commentId) => {\r\n    dispatch(deleteComment(postId, commentId));\r\n    setOptionType({ currentView: '', id: null });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonGroup vertical className='post-footer-btn-group ml-3 mr-3 mt-5'>\r\n        <Button variant='link' onClick={() => setShowComment(!showComment)}>\r\n          {' '}\r\n          <i\r\n            className={\r\n              commented\r\n                ? 'fa fa-comment-alt fa-fw fa-2x'\r\n                : 'far fa-comment-alt fa-fw fa-2x'\r\n            }\r\n          />{' '}\r\n        </Button>\r\n        <Button variant='link' onClick={() => setShowComment(!showComment)}>\r\n          {comments.length !== 0 && (\r\n            <span>\r\n              {comments.length} {comments.length !== 1 ? 'Comments' : 'Comment'}\r\n            </span>\r\n          )}\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Modal\r\n        className='modal-sidebar'\r\n        show={showComment}\r\n        onHide={() => setShowComment(!showComment)}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Comments ({comments.length})</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => handleSubmit(e, 'Add')}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                placeholder=\"What's your thought?\"\r\n                name='newComment'\r\n                as='textarea'\r\n                value={newComment}\r\n                onChange={handleChange}\r\n                required={true}\r\n                rows={4}\r\n              />\r\n            </Form.Group>\r\n            <Button type='submit'>Submit Comment</Button>\r\n          </Form>\r\n          <hr />\r\n          <Loading\r\n            loading={commentLoading}\r\n            loadingMsg='Loading comments, please wait...'\r\n          />\r\n          {comments.length !== 0 ? (\r\n            <React.Fragment>\r\n              {comments.map((comment) => {\r\n                const { firstname, lastname, avatar, _id } = comment.user;\r\n                return (\r\n                  <React.Fragment key={_id}>\r\n                    {currentView === 'showEdit' && id === comment._id ? (\r\n                      <Form onSubmit={(e) => handleSubmit(e, 'Update')}>\r\n                        <Form.Group>\r\n                          <Form.Label>Update Comment</Form.Label>\r\n                          <Form.Control\r\n                            name='updatedComment'\r\n                            as='textarea'\r\n                            value={updatedComment}\r\n                            onChange={handleChange}\r\n                            required={true}\r\n                            rows={4}\r\n                          />\r\n                        </Form.Group>\r\n                        <Button type='submit' className='mr-2'>\r\n                          Save Changes\r\n                        </Button>\r\n                        <Button\r\n                          variant='outline-primary'\r\n                          onClick={() =>\r\n                            handleOptions({\r\n                              currentView: '',\r\n                              id: null,\r\n                            })\r\n                          }\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </Form>\r\n                    ) : currentView === 'showDelete' && id === comment._id ? (\r\n                      <React.Fragment>\r\n                        <p>Are you sure you want to delete this comment?</p>\r\n                        <Button\r\n                          className='mr-2'\r\n                          onClick={() => handleDelete(comment._id)}\r\n                        >\r\n                          Yes\r\n                        </Button>\r\n                        <Button\r\n                          variant='outline-primary'\r\n                          onClick={() =>\r\n                            handleOptions({\r\n                              currentView: '',\r\n                              id: null,\r\n                            })\r\n                          }\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <div className='mb-5'>\r\n                        {userDetails._id === _id && (\r\n                          <React.Fragment>\r\n                            {!id && (\r\n                              <NavDropdown\r\n                                id='post-more-dropdown'\r\n                                title={\r\n                                  <Button size='sm' variant='link'>\r\n                                    <i className='fa fa-ellipsis-h fa-fw' />\r\n                                  </Button>\r\n                                }\r\n                              >\r\n                                <NavDropdown.Item\r\n                                  onClick={() =>\r\n                                    handleOptions(\r\n                                      {\r\n                                        currentView: 'showEdit',\r\n                                        id: comment._id,\r\n                                      },\r\n                                      comment.text\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  Edit\r\n                                </NavDropdown.Item>\r\n                                <NavDropdown.Item\r\n                                  onClick={() =>\r\n                                    handleOptions({\r\n                                      currentView: 'showDelete',\r\n                                      id: comment._id,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Delete\r\n                                </NavDropdown.Item>\r\n                              </NavDropdown>\r\n                            )}\r\n                          </React.Fragment>\r\n                        )}\r\n                        <div className='post-user mt-2 mb-3'>\r\n                          <Image src={avatar} roundedCircle />\r\n                          <p className='text-primary ml-2'>\r\n                            <strong>\r\n                              {firstname} {lastname}\r\n                              <span className='ml-2 mr-2'>&bull;</span>\r\n                              <TimeAgo date={comment.date} />\r\n                            </strong>\r\n                          </p>\r\n                        </div>\r\n                        <p>{comment.text}</p>\r\n                      </div>\r\n                    )}\r\n                    <hr />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          ) : (\r\n            <p className='text-center lead mt-5'>No comments for now.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostComments;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostLikes\\index.js",["236"],"import React, { useState, useEffect } from 'react';\r\nimport { ButtonGroup, Button, Modal, Image } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../actions/postAction';\r\n\r\nconst PostLikes = (props) => {\r\n  const { postId, likes, userDetails } = props;\r\n  const [liked, setLiked] = useState(false);\r\n  const [showLikes, setShowLikes] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const hasLiked = likes.find((item) => item.user._id === userDetails._id)\r\n      ? true\r\n      : false;\r\n    setLiked(hasLiked);\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    if (liked) {\r\n      dispatch(unlikePost(postId));\r\n    } else {\r\n      dispatch(likePost(postId));\r\n    }\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonGroup vertical className='post-footer-btn-group mr-3 mt-5'>\r\n        <Button variant='link' onClick={() => handleLike()}>\r\n          {' '}\r\n          <i\r\n            className={\r\n              liked ? 'fa fa-heart fa-fw fa-2x' : 'far fa-heart fa-fw fa-2x'\r\n            }\r\n          />{' '}\r\n        </Button>\r\n        <Button variant='link' onClick={() => setShowLikes(!showLikes)}>\r\n          {likes.length !== 0 && (\r\n            <span>\r\n              {likes.length} {likes.length !== 1 ? 'Likes' : 'Like'}\r\n            </span>\r\n          )}\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Modal show={showLikes} onHide={() => setShowLikes(!showLikes)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Likes ({likes.length})</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {likes.length !== 0 ? (\r\n            <React.Fragment>\r\n              {likes.map((like) => {\r\n                const { firstname, lastname, avatar, _id } = like.user;\r\n                return (\r\n                  <React.Fragment key={_id}>\r\n                    <div className='post-user mt-2 mb-3'>\r\n                      <Image src={avatar} roundedCircle />\r\n                      <p className='text-primary ml-2'>\r\n                        <strong>\r\n                          {firstname} {lastname}\r\n                        </strong>\r\n                      </p>\r\n                    </div>\r\n                    <hr />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          ) : (\r\n            <p className='text-center lead mt-5'>No likes for now.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostLikes;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\DeleteDialog\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\AboutTheAuthor\\index.js",["237"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Image, Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfileByUserId } from '../../actions/profileAction';\r\n\r\nconst AboutTheAuthor = (props) => {\r\n  const { user } = props;\r\n  const { _id, firstname, lastname, avatar } = user;\r\n\r\n  const { profileDetails } = useSelector((state) => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileByUserId(_id));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className='mt-4 mb-5'>About the Author</h1>\r\n      {profileDetails && (\r\n        <Row>\r\n          <Col xs={3} md={3}>\r\n            <p className='text-center'>\r\n              <Image src={avatar} roundedCircle thumbnail />\r\n            </p>\r\n          </Col>\r\n          <Col xs={9} md={9}>\r\n            <h3 className='mt-2'>\r\n              {firstname} {lastname}\r\n            </h3>\r\n            <div className='post-profile-subdetails'>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-map-marker fa-fw text-danger' />{' '}\r\n                {profileDetails.location}\r\n              </p>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-building fa-fw' /> {profileDetails.company}\r\n              </p>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-globe fa-fw text-warning' />{' '}\r\n                {profileDetails.website}\r\n              </p>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-quote-left fa-fw text-muted' /> Feeling{' '}\r\n                {profileDetails.status}\r\n              </p>\r\n            </div>\r\n            <div className='mb-3'>\r\n              <p>{profileDetails.bio}</p>\r\n            </div>\r\n            <Button variant='primary' className='mr-2'>\r\n              View Profile\r\n            </Button>\r\n            <Button variant='outline-primary'>Posts</Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AboutTheAuthor;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditPost\\index.js",["238","239","240"],"import React, { useEffect, useState } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport AlertDismissable from '../../components/Alert';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPostDetails, updatePost } from '../../actions/postAction';\r\n\r\nconst EditPost = (props) => {\r\n  const { match, history } = props;\r\n  const { postDetails, loading } = useSelector((state) => state.post);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostDetails(match.params.id));\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      {postDetails && (\r\n        <React.Fragment>\r\n          <AlertDismissable />\r\n          <Button\r\n            className='mb-3'\r\n            href={`/post/${match.params.id}`}\r\n            variant='outline-primary'\r\n          >\r\n            <i className='fa fa-chevron-left fa-fw' />\r\n            Back\r\n          </Button>\r\n          <h1>Edit Post</h1>\r\n          <EditPostForm postDetails={postDetails} history={history} />\r\n        </React.Fragment>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nconst EditPostForm = (props) => {\r\n  const { postDetails, history } = props;\r\n  const [title, handleTitle] = useState('');\r\n  const [content, handleContent] = useState((content, editor) => content);\r\n\r\n  useEffect(() => {\r\n    handleTitle(postDetails ? postDetails.title : '');\r\n    handleContent(postDetails ? postDetails.content : '');\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const thumbnail = document\r\n      .querySelector('#preview img')\r\n      .getAttribute('src');\r\n    const postData = {\r\n      title,\r\n      content,\r\n      thumbnail,\r\n    };\r\n\r\n    dispatch(updatePost(postDetails._id, postData, history));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={(e) => handleSubmit(e)}>\r\n      <Button\r\n        type='submit'\r\n        variant='primary'\r\n        className='float-right edit-post-btn'\r\n      >\r\n        Save Changes\r\n      </Button>\r\n      <Form.Group className='mt-5'>\r\n        <Form.Control\r\n          className='post-title-textarea'\r\n          name='title'\r\n          as='textarea'\r\n          placeholder='Title'\r\n          value={title}\r\n          onChange={(e) => handleTitle(e.target.value)}\r\n          required={true}\r\n        />\r\n      </Form.Group>\r\n      <Editor\r\n        apiKey='d01fggzhnl8ykqa0mv3t83mdkkw8f4j5aj305lr5it0pvjck'\r\n        initialValue={content}\r\n        init={{\r\n          placeholder: 'What do you have in mind?',\r\n          selector: 'textarea',\r\n          resize: false,\r\n          height: 500,\r\n          menubar: false,\r\n          toolbar_mode: 'floating',\r\n          toolbar_location: 'bottom',\r\n          skin: 'outside',\r\n          plugins: [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount',\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic backcolor | link image | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n        }}\r\n        onEditorChange={(e) => handleContent(e)}\r\n      />\r\n      <div\r\n        style={{ display: 'none' }}\r\n        id='preview'\r\n        dangerouslySetInnerHTML={{ __html: content }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":16,"column":6,"nodeType":"247","endLine":16,"endColumn":8,"suggestions":"248"},{"ruleId":"245","severity":1,"message":"246","line":12,"column":6,"nodeType":"247","endLine":12,"endColumn":8,"suggestions":"249"},{"ruleId":"245","severity":1,"message":"246","line":28,"column":6,"nodeType":"247","endLine":28,"endColumn":8,"suggestions":"250"},{"ruleId":"245","severity":1,"message":"246","line":32,"column":6,"nodeType":"247","endLine":32,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":1,"column":8,"nodeType":"254","messageId":"255","endLine":1,"endColumn":9},{"ruleId":"256","severity":1,"message":"257","line":16,"column":1,"nodeType":"258","endLine":57,"endColumn":2},{"ruleId":"245","severity":1,"message":"246","line":26,"column":6,"nodeType":"247","endLine":26,"endColumn":8,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":73,"column":15,"nodeType":"262","messageId":"263","endLine":75,"endColumn":67},{"ruleId":"256","severity":1,"message":"257","line":19,"column":1,"nodeType":"258","endLine":73,"endColumn":2},{"ruleId":"245","severity":1,"message":"246","line":17,"column":6,"nodeType":"247","endLine":17,"endColumn":8,"suggestions":"264"},{"ruleId":"252","severity":1,"message":"265","line":6,"column":3,"nodeType":"254","messageId":"255","endLine":6,"endColumn":12},{"ruleId":"252","severity":1,"message":"266","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"246","line":24,"column":6,"nodeType":"247","endLine":24,"endColumn":8,"suggestions":"267"},{"ruleId":"245","severity":1,"message":"268","line":54,"column":6,"nodeType":"247","endLine":54,"endColumn":8,"suggestions":"269"},{"ruleId":"256","severity":1,"message":"257","line":20,"column":1,"nodeType":"258","endLine":78,"endColumn":2},{"ruleId":"256","severity":1,"message":"257","line":14,"column":1,"nodeType":"258","endLine":41,"endColumn":2},{"ruleId":"245","severity":1,"message":"270","line":25,"column":6,"nodeType":"247","endLine":25,"endColumn":8,"suggestions":"271"},{"ruleId":"252","severity":1,"message":"272","line":4,"column":23,"nodeType":"254","messageId":"255","endLine":4,"endColumn":34},{"ruleId":"245","severity":1,"message":"273","line":22,"column":6,"nodeType":"247","endLine":22,"endColumn":8,"suggestions":"274"},{"ruleId":"252","severity":1,"message":"275","line":24,"column":9,"nodeType":"254","messageId":"255","endLine":24,"endColumn":19},{"ruleId":"245","severity":1,"message":"276","line":45,"column":6,"nodeType":"247","endLine":45,"endColumn":8,"suggestions":"277"},{"ruleId":"245","severity":1,"message":"273","line":19,"column":6,"nodeType":"247","endLine":19,"endColumn":8,"suggestions":"278"},{"ruleId":"245","severity":1,"message":"279","line":17,"column":6,"nodeType":"247","endLine":17,"endColumn":8,"suggestions":"280"},{"ruleId":"245","severity":1,"message":"270","line":19,"column":6,"nodeType":"247","endLine":19,"endColumn":8,"suggestions":"281"},{"ruleId":"245","severity":1,"message":"282","line":52,"column":6,"nodeType":"247","endLine":52,"endColumn":8,"suggestions":"283"},{"ruleId":"260","severity":1,"message":"261","line":109,"column":13,"nodeType":"262","messageId":"263","endLine":111,"endColumn":67},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["286"],["287"],["288"],["289"],"no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["290"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["291"],"'CardGroup' is defined but never used.","'Form' is defined but never used.",["292"],"React Hook useEffect has a missing dependency: 'profileDetails'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["294"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'likes' and 'userDetails._id'. Either include them or remove the dependency array.",["295"],"'handleLike' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comments' and 'userDetails._id'. Either include them or remove the dependency array.",["296"],["297"],"React Hook useEffect has missing dependencies: '_id' and 'dispatch'. Either include them or remove the dependency array.",["298"],["299"],"React Hook useEffect has a missing dependency: 'postDetails'. Either include it or remove the dependency array.",["300"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},{"desc":"301","fix":"304"},{"desc":"301","fix":"305"},{"desc":"301","fix":"306"},{"desc":"301","fix":"307"},{"desc":"301","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"313","fix":"317"},{"desc":"318","fix":"319"},{"desc":"311","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [dispatch]",{"range":"323","text":"324"},{"range":"325","text":"324"},{"range":"326","text":"324"},{"range":"327","text":"324"},{"range":"328","text":"324"},{"range":"329","text":"324"},{"range":"330","text":"324"},"Update the dependencies array to be: [profileDetails]",{"range":"331","text":"332"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"333","text":"334"},"Update the dependencies array to be: [likes, userDetails._id]",{"range":"335","text":"336"},"Update the dependencies array to be: [comments, userDetails._id]",{"range":"337","text":"338"},{"range":"339","text":"336"},"Update the dependencies array to be: [_id, dispatch]",{"range":"340","text":"341"},{"range":"342","text":"334"},"Update the dependencies array to be: [postDetails]",{"range":"343","text":"344"},[448,450],"[dispatch]",[341,343],[861,863],[1021,1023],[979,981],[630,632],[863,865],[1620,1622],"[profileDetails]",[969,971],"[dispatch, match.params.id]",[706,708],"[likes, userDetails._id]",[1167,1169],"[comments, userDetails._id]",[624,626],[533,535],"[_id, dispatch]",[706,708],[1656,1658],"[postDetails]"]