[{"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\index.js":"1","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\App.js":"2","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Header\\index.js":"4","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\index.js":"5","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Home\\index.js":"6","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Developers\\index.js":"7","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignIn\\index.js":"8","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Main\\index.js":"9","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignUp\\index.js":"10","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\customHooks\\useForm.js":"11","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\store.js":"12","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\index.js":"13","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Alert\\index.js":"14","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\authReducer.js":"15","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\authConstants.js":"16","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\authAction.js":"17","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\util\\setAuthToken.js":"18","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Loading\\index.js":"19","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PrivateRoute.js":"20","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Dashboard\\index.js":"21","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\CreatePost\\index.js":"22","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingScreen\\index.js":"23","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\profileReducer.js":"24","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\profileConstants.js":"25","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\profileAction.js":"26","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PublicRoute.js":"27","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Profile\\index.js":"28","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileHeader\\index.js":"29","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileDetails\\index.js":"30","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditProfile\\index.js":"31","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EditProfileDetails\\index.js":"32","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewExperience\\index.js":"33","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewEducation\\index.js":"34","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\postReducer.js":"35","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\postConstants.js":"36","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\postAction.js":"37","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Posts\\index.js":"38","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\uiStateAction.js":"39","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\uiStateConstants.js":"40","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\uiStateReducer.js":"41","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\PostDetails\\index.js":"42","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostDetailsFooter\\index.js":"43","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostComment\\index.js":"44"},{"size":500,"mtime":1608862841737,"results":"45","hashOfConfig":"46"},{"size":857,"mtime":1610253670019,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1607648565038,"results":"48","hashOfConfig":"46"},{"size":3969,"mtime":1610979957703,"results":"49","hashOfConfig":"46"},{"size":1535,"mtime":1610945765547,"results":"50","hashOfConfig":"46"},{"size":1375,"mtime":1610940833301,"results":"51","hashOfConfig":"46"},{"size":458,"mtime":1610940998336,"results":"52","hashOfConfig":"46"},{"size":2685,"mtime":1610941343896,"results":"53","hashOfConfig":"46"},{"size":237,"mtime":1610349883694,"results":"54","hashOfConfig":"46"},{"size":3953,"mtime":1610941419752,"results":"55","hashOfConfig":"46"},{"size":367,"mtime":1610946418764,"results":"56","hashOfConfig":"46"},{"size":399,"mtime":1609226384912,"results":"57","hashOfConfig":"46"},{"size":363,"mtime":1610940073581,"results":"58","hashOfConfig":"46"},{"size":604,"mtime":1610940248964,"results":"59","hashOfConfig":"46"},{"size":1100,"mtime":1610024878080,"results":"60","hashOfConfig":"46"},{"size":168,"mtime":1610024829493,"results":"61","hashOfConfig":"46"},{"size":2194,"mtime":1610940165686,"results":"62","hashOfConfig":"46"},{"size":253,"mtime":1609482015721,"results":"63","hashOfConfig":"46"},{"size":580,"mtime":1609634840838,"results":"64","hashOfConfig":"46"},{"size":786,"mtime":1610808847442,"results":"65","hashOfConfig":"46"},{"size":2067,"mtime":1610953091497,"results":"66","hashOfConfig":"46"},{"size":2876,"mtime":1610942255141,"results":"67","hashOfConfig":"46"},{"size":464,"mtime":1610081310821,"results":"68","hashOfConfig":"46"},{"size":1467,"mtime":1610517498395,"results":"69","hashOfConfig":"46"},{"size":406,"mtime":1610515521247,"results":"70","hashOfConfig":"46"},{"size":3415,"mtime":1610940165687,"results":"71","hashOfConfig":"46"},{"size":798,"mtime":1610808842797,"results":"72","hashOfConfig":"46"},{"size":1232,"mtime":1610805236678,"results":"73","hashOfConfig":"46"},{"size":2039,"mtime":1610613230020,"results":"74","hashOfConfig":"46"},{"size":8806,"mtime":1610807989673,"results":"75","hashOfConfig":"46"},{"size":2780,"mtime":1610944724846,"results":"76","hashOfConfig":"46"},{"size":6325,"mtime":1610803395872,"results":"77","hashOfConfig":"46"},{"size":3884,"mtime":1610804926743,"results":"78","hashOfConfig":"46"},{"size":3555,"mtime":1610804920378,"results":"79","hashOfConfig":"46"},{"size":1289,"mtime":1610976164277,"results":"80","hashOfConfig":"46"},{"size":341,"mtime":1610975893834,"results":"81","hashOfConfig":"46"},{"size":3009,"mtime":1610976249733,"results":"82","hashOfConfig":"46"},{"size":2881,"mtime":1610943959091,"results":"83","hashOfConfig":"46"},{"size":365,"mtime":1610940337592,"results":"84","hashOfConfig":"46"},{"size":133,"mtime":1610940343998,"results":"85","hashOfConfig":"46"},{"size":809,"mtime":1610940764527,"results":"86","hashOfConfig":"46"},{"size":2740,"mtime":1611050433366,"results":"87","hashOfConfig":"46"},{"size":2760,"mtime":1611048116440,"results":"88","hashOfConfig":"46"},{"size":2809,"mtime":1611050492541,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1cjo7jk",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\index.js",[],["197","198"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\App.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Header\\index.js",["199"],"import React from 'react';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Container,\r\n  Button,\r\n  Image,\r\n} from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signOutUser } from '../../actions/authAction';\r\n\r\nconst Header = (props) => {\r\n  const { history } = props;\r\n  const { pathname } = history.location;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated, userDetails, loading } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n  const { currentPage } = useSelector((state) => state.uiState);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(signOutUser(history));\r\n  };\r\n\r\n  const publicLinks = (\r\n    <Nav>\r\n      <Nav.Link className={currentPage === 'Home' && 'active'} href='/'>\r\n        Home\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className={currentPage === 'Developers' && 'active'}\r\n        href='/developers'\r\n      >\r\n        Developers\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className={currentPage === 'Sign In' && 'active'}\r\n        href='/sign-in'\r\n      >\r\n        Sign In\r\n      </Nav.Link>\r\n      <Button\r\n        href='/sign-up'\r\n        className='nav-link-btn ml-2'\r\n        variant={currentPage === 'Sign Up' ? 'primary' : 'outline-primary'}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </Nav>\r\n  );\r\n\r\n  const privateLinks = (\r\n    <Nav>\r\n      <Nav.Link\r\n        className={currentPage === 'Dashboard' && 'active'}\r\n        href='/dashboard'\r\n      >\r\n        Dashboard\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className={currentPage === 'Saved Posts' && 'active'}\r\n        href='/bookmarks'\r\n      >\r\n        Bookmarks\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className={currentPage === 'Notifs' && 'active'}\r\n        href='/notifications'\r\n      >\r\n        Notifs\r\n      </Nav.Link>\r\n      <Nav.Link\r\n        className={currentPage === 'Notifs' && 'active'}\r\n        href='/notifications'\r\n      >\r\n        <i className='fa fa-search fa-fw' style={{ fontSize: 16 }} />\r\n      </Nav.Link>\r\n      <NavDropdown\r\n        alignRight\r\n        title={\r\n          <Image\r\n            className='nav-avatar'\r\n            src={userDetails && userDetails.avatar}\r\n            roundedCircle\r\n            thumbnail\r\n          />\r\n        }\r\n        id='nav-dropdown'\r\n      >\r\n        <NavDropdown.Item href='/profile'>\r\n          {userDetails && (\r\n            <React.Fragment>\r\n              <p className='text-primary nav-name-content'>\r\n                <strong>\r\n                  {userDetails.firstname} {userDetails.lastname}\r\n                </strong>\r\n              </p>\r\n              <span className='text-muted'>{userDetails.email}</span>\r\n            </React.Fragment>\r\n          )}\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href='/create-post'>Write a post</NavDropdown.Item>\r\n        <NavDropdown.Item href='/posts'>Posts</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href='/account-settings'>\r\n          Account Settings\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item onClick={() => handleLogOut()}>\r\n          Log Out\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand='lg'\r\n        bg='light'\r\n        variant='light'\r\n        fixed='top'\r\n      >\r\n        <Container>\r\n          <Navbar.Brand href='/' className='nav-logo'>\r\n            <i className='fa fa-code fa-fw' /> DEVLY\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n          <Navbar.Collapse id='responsive-navbar-nav'>\r\n            <Nav className='mr-auto'></Nav>\r\n            {!loading && (\r\n              <React.Fragment>\r\n                {isAuthenticated ? privateLinks : publicLinks}\r\n              </React.Fragment>\r\n            )}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Home\\index.js",["200"],"import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Home = (props) => {\r\n  const { history } = props;\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Home'));\r\n  }, []);\r\n\r\n  if (isAuthenticated) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <div className='hero-bg'>\r\n      <div className='hero-content'>\r\n        <h1 className='display-2 text-center'>Welcome Home</h1>\r\n        <p className='lead text-center'>\r\n          DEVLY's purpose is to consectetur adipiscing elit, sed do eiusmod\r\n          tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n          veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\r\n          ea commodo consequat.\r\n        </p>\r\n        <div className='hero-btn-group mt-5'>\r\n          <Button className='mr-2' variant='outline-light' href='/sign-up'>\r\n            Get Started\r\n          </Button>\r\n          <Button className='ml-2' variant='outline-light' href='/developers'>\r\n            Check our Developers\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Developers\\index.js",["201"],"import React, { useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Developers = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Developers'));\r\n  }, []);\r\n\r\n  return (\r\n    <Main>\r\n      <h1>Developers Page</h1>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Developers;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignIn\\index.js",["202"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Main from '../../components/Main';\r\nimport useForm from '../../customHooks/useForm';\r\nimport AlertDismissable from '../../components/Alert';\r\nimport Loading from '../../components/Loading';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from '../../actions/authAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst SignIn = (props) => {\r\n  const { history } = props;\r\n\r\n  const [values, handleChange] = useForm({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = values;\r\n\r\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Sign In'));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(signInUser(values));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <Row>\r\n        <Col xs={6} md={3} />\r\n        <Col xs={6} md={6}>\r\n          <h1 className='text-center mb-5'>Sign In</h1>\r\n          <Loading\r\n            loadingMsg={'Logging in, please wait...'}\r\n            loading={loading}\r\n          />\r\n          <AlertDismissable />\r\n          <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                name='email'\r\n                type='email'\r\n                value={email}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name='password'\r\n                type='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='formBasicCheckbox'>\r\n              <Form.Check type='checkbox' label='Check me out' />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit' className='btn-block'>\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n          <hr />\r\n          <Button\r\n            href='/sign-up'\r\n            variant='outline-primary'\r\n            type='submit'\r\n            className='btn-block mt-4'\r\n          >\r\n            Create an Account\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} md={3} />\r\n      </Row>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Main\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignUp\\index.js",["203"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Main from '../../components/Main';\r\nimport useForm from '../../customHooks/useForm';\r\nimport AlertDismissable from '../../components/Alert';\r\nimport Loading from '../../components/Loading';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { alertSet } from '../../actions/uiStateAction';\r\nimport { signUpUser } from '../../actions/authAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst SignUp = (props) => {\r\n  const { history } = props;\r\n\r\n  const [values, handleChange] = useForm({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const { firstname, lastname, email, password, confirmPassword } = values;\r\n\r\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Sign Up'));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      dispatch(\r\n        alertSet({\r\n          alertType: 'danger',\r\n          alertMsg: 'Passwords do not match.',\r\n        })\r\n      );\r\n    } else {\r\n      const userData = { firstname, lastname, email, password };\r\n      dispatch(signUpUser(userData));\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <Row>\r\n        <Col sm={0} md={3} />\r\n        <Col sm={12} md={6}>\r\n          <h1 className='text-center mb-5'>Create an Account</h1>\r\n          <Loading\r\n            loadingMsg={'Signing up, please wait...'}\r\n            loading={loading}\r\n          />\r\n          <AlertDismissable />\r\n          <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group>\r\n              <Form.Label>Firstname</Form.Label>\r\n              <Form.Control\r\n                name='firstname'\r\n                type='text'\r\n                value={firstname}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Lastname</Form.Label>\r\n              <Form.Control\r\n                name='lastname'\r\n                type='text'\r\n                value={lastname}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                name='email'\r\n                type='email'\r\n                value={email}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name='password'\r\n                type='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                name='confirmPassword'\r\n                type='password'\r\n                value={confirmPassword}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit' className='btn-block'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n          <hr />\r\n          <Button\r\n            href='/sign-in'\r\n            variant='outline-primary'\r\n            type='submit'\r\n            className='btn-block mt-4'\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Col>\r\n        <Col sm={0} md={3} />\r\n      </Row>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\customHooks\\useForm.js",["204"],"import e from 'cors';\r\nimport { useState } from 'react';\r\n\r\n// handle form fields dynamically\r\nconst useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  return [\r\n    values,\r\n    (e) => {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\store.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Alert\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\authReducer.js",["205"],"import {\r\n  AUTH_BEGIN,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  USER_LOADED,\r\n} from '../constants/authConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  userDetails: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case AUTH_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userDetails: payload.userData,\r\n      };\r\n    case AUTH_SUCCESS:\r\n      localStorage.setItem('token', payload.userToken);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userDetails: payload.userDetails,\r\n      };\r\n    case AUTH_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: null,\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\authConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\authAction.js",["206"],"import {\r\n  AUTH_BEGIN,\r\n  AUTH_END,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  USER_LOADED,\r\n} from '../constants/authConstants';\r\nimport { alertSet } from './uiStateAction';\r\nimport axios from 'axios';\r\nimport setAuthToken from '../util/setAuthToken';\r\n\r\nexport const authBegin = () => ({\r\n  type: AUTH_BEGIN,\r\n});\r\n\r\nexport const authSuccess = (res) => ({\r\n  type: AUTH_SUCCESS,\r\n  payload: res,\r\n});\r\n\r\nexport const authFail = () => ({\r\n  type: AUTH_FAIL,\r\n});\r\n\r\nexport const userLoaded = (res) => ({\r\n  type: USER_LOADED,\r\n  payload: res,\r\n});\r\n\r\nexport const signUpUser = (userData) => async (dispatch) => {\r\n  dispatch(authBegin());\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/user', userData, config);\r\n\r\n    dispatch(authSuccess(res.data));\r\n    dispatch(\r\n      alertSet({\r\n        alertType: 'success',\r\n        alertMsg: 'You have created an account successfully.',\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log('Error', err);\r\n    dispatch(authFail());\r\n    dispatch(\r\n      alertSet({\r\n        alertType: 'danger',\r\n        alertMsg: 'An error occured while signing up.',\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const signInUser = (userData) => async (dispatch) => {\r\n  dispatch(authBegin());\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', userData, config);\r\n\r\n    dispatch(authSuccess(res.data));\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    console.log('Error', err.errors);\r\n    dispatch(authFail());\r\n    dispatch(\r\n      alertSet({\r\n        alertType: 'danger',\r\n        alertMsg: 'Username and password incorrect.',\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const signOutUser = (history) => (dispatch) => {\r\n  history.push('/');\r\n  dispatch(authFail());\r\n};\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  dispatch(authBegin());\r\n\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch(userLoaded(res.data));\r\n  } catch (err) {\r\n    dispatch(authFail());\r\n  }\r\n};\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\util\\setAuthToken.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Loading\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Dashboard\\index.js",["207"],"import React, { useEffect } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport Main from '../../components/Main';\r\nimport Posts from '../../components/Posts';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\nimport { getAllPosts } from '../../actions/postAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Dashboard = (props) => {\r\n  const { history } = props;\r\n  const { profileDetails, loading: profileLoading } = useSelector(\r\n    (state) => state.profile\r\n  );\r\n  const { posts, loading: postLoading } = useSelector((state) => state.post);\r\n  const { userDetails } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Dashboard'));\r\n    dispatch(getCurrentProfile());\r\n    dispatch(getAllPosts());\r\n  }, []);\r\n\r\n  return profileLoading || postLoading ? (\r\n    <LoadingScreen loadingMsg='Loading, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      <h1>Dashboard</h1>\r\n      {!profileDetails ? (\r\n        <Card>\r\n          <Card.Body>\r\n            <p className='lead'>\r\n              Welcome,{' '}\r\n              {userDetails &&\r\n                `${userDetails.firstname} ${userDetails.lastname}`}\r\n            </p>\r\n            <p>\r\n              Looks like that you didn't setup your profile yet. Edit your\r\n              profile to get recognized.\r\n            </p>\r\n            <Button href='/edit-profile'>Edit Profile</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <Button\r\n          title='Write a Post'\r\n          className='float-right write-post-btn'\r\n          variant='outline-primary'\r\n          href='/create-post'\r\n        >\r\n          <i className='fa fa-pen fa-fw' />\r\n        </Button>\r\n      )}\r\n      {posts && (\r\n        <Posts posts={posts} userDetails={userDetails} history={history} />\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\CreatePost\\index.js",["208","209"],"import React, { useEffect, useState } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savePost } from '../../actions/postAction';\r\nimport AlertDismissable from '../../components/Alert';\r\n\r\nconst CreatePost = (props) => {\r\n  const { history } = props;\r\n  const [title, handleTitle] = useState('');\r\n  const [content, handleContent] = useState((content, editor) => content);\r\n\r\n  const { loading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const thumbnail = document\r\n      .querySelector('#preview img')\r\n      .getAttribute('src');\r\n    const postData = {\r\n      title,\r\n      content,\r\n      thumbnail,\r\n    };\r\n\r\n    dispatch(savePost(postData, history));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      <AlertDismissable />\r\n      <h1>Write a Post</h1>\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Button type='submit' className='float-right publish-post-btn'>\r\n          Publish Post\r\n        </Button>\r\n        <Form.Group className='mt-5'>\r\n          <Form.Control\r\n            className='post-title-textarea'\r\n            name='title'\r\n            as='textarea'\r\n            placeholder='Title'\r\n            value={title}\r\n            onChange={(e) => handleTitle(e.target.value)}\r\n            required={true}\r\n          />\r\n        </Form.Group>\r\n        <Editor\r\n          apiKey='d01fggzhnl8ykqa0mv3t83mdkkw8f4j5aj305lr5it0pvjck'\r\n          initialValue={content}\r\n          init={{\r\n            placeholder: 'What do you have in mind?',\r\n            selector: 'textarea',\r\n            resize: false,\r\n            height: 500,\r\n            menubar: false,\r\n            toolbar_mode: 'floating',\r\n            toolbar_location: 'bottom',\r\n            skin: 'outside',\r\n            plugins: [\r\n              'advlist autolink lists link image charmap print preview anchor',\r\n              'searchreplace visualblocks code fullscreen',\r\n              'insertdatetime media table paste code help wordcount',\r\n            ],\r\n            toolbar:\r\n              'undo redo | formatselect | bold italic backcolor | link image | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n          }}\r\n          onEditorChange={(e) => handleContent(e)}\r\n        />\r\n      </Form>\r\n      <div\r\n        style={{ display: 'none' }}\r\n        id='preview'\r\n        dangerouslySetInnerHTML={{ __html: content }}\r\n      />\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingScreen\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\profileReducer.js",["210"],"import {\r\n  PROFILE_BEGIN,\r\n  PROFILE_END,\r\n  PROFILE_DETAILS_SUCCESS,\r\n  PROFILES_SUCCESS,\r\n  REPOS_SUCCESS,\r\n  PROFILE_DETAILS_FAIL,\r\n  PROFILES_FAIL,\r\n  REPOS_FAIL,\r\n} from '../constants/profileConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  profileDetails: null,\r\n  profiles: null,\r\n  repos: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PROFILE_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case PROFILE_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case PROFILE_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profileDetails: payload.profileDetails,\r\n      };\r\n    case PROFILES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profiles: payload.profiles,\r\n      };\r\n    case REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repos: payload.repos,\r\n      };\r\n    case PROFILE_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profileDetails: null,\r\n      };\r\n    case PROFILES_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profiles: null,\r\n      };\r\n    case REPOS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repos: [],\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\profileConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\profileAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PublicRoute.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Profile\\index.js",["211"],"import React, { useEffect } from 'react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport ProfileDetails from '../../components/ProfileDetails';\r\nimport ProfileHeader from '../../components/ProfileHeader';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\n\r\nconst Profile = () => {\r\n  const { profileDetails, loading } = useSelector((state) => state.profile);\r\n  const { userDetails } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading, please wait...' />\r\n  ) : (\r\n    <React.Fragment>\r\n      {profileDetails && userDetails && (\r\n        <React.Fragment>\r\n          <div className='profile-bg'>\r\n            <ProfileHeader\r\n              profileDetails={profileDetails}\r\n              userDetails={userDetails}\r\n            />\r\n          </div>\r\n          <ProfileDetails\r\n            profileDetails={profileDetails}\r\n            userDetails={userDetails}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileHeader\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileDetails\\index.js",["212"],"import React, { useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardGroup,\r\n  Container,\r\n  ListGroup,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileDetails = (props) => {\r\n  const [key, setKey] = useState('#experience');\r\n\r\n  const { profileDetails, userDetails } = props;\r\n  const { experience, education, social } = profileDetails;\r\n\r\n  return (\r\n    <Container className='mt-2 mb-5'>\r\n      <Nav\r\n        className='justify-content-center profile-details-nav'\r\n        activeKey={key}\r\n        onSelect={(key) => setKey(key)}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#experience' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#experience'\r\n          >\r\n            Work Experience\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#education' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#education'\r\n          >\r\n            Education\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#socials' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#socials'\r\n          >\r\n            Socials and Contact Infos\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <div className='mt-5'>\r\n        {key === '#experience' && (\r\n          <React.Fragment>\r\n            <Button\r\n              title='Add Experience'\r\n              className='float-right'\r\n              variant='outline-primary'\r\n              href='/edit-profile#experience'\r\n            >\r\n              <i className='fa fa-plus fa-fw' />\r\n            </Button>\r\n            <h1>Work Experience</h1>\r\n            <ListGroup className='mt-5'>\r\n              {experience.map((item) => {\r\n                return (\r\n                  <Card key={item.id} className='mb-2'>\r\n                    <Card.Body>\r\n                      <div className='float-right'>\r\n                        <h5 className='text-right'>\r\n                          <Badge pill variant='primary' style={{ padding: 12 }}>\r\n                            {item.type}\r\n                          </Badge>\r\n                        </h5>\r\n                        <p className='text-muted'>\r\n                          <i className='fa fa-calendar fa-fw' />\r\n                          <Moment format='MM/DD/YY'>{item.from}</Moment> -{' '}\r\n                          {item.current && 'Current'}\r\n                          {item.to && (\r\n                            <Moment format='MM/DD/YY'>{item.to}</Moment>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <h3 className='mt-2'>{item.title}</h3>\r\n                      <div className='profile-details-subdetails'>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-building fa-fw' /> {item.company}\r\n                        </p>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-map-marker fa-fw' />{' '}\r\n                          {item.location}\r\n                        </p>\r\n                      </div>\r\n                      <p className='mt-2'>{item.description}</p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n        {key === '#education' && (\r\n          <React.Fragment>\r\n            <Button\r\n              title='Add Education'\r\n              className='float-right'\r\n              variant='outline-primary'\r\n              href='/edit-profile#education'\r\n            >\r\n              <i className='fa fa-plus fa-fw' />\r\n            </Button>\r\n            <h1>Education</h1>\r\n            <ListGroup className='mt-5'>\r\n              {education.map((item) => {\r\n                return (\r\n                  <Card key={item.id} className='mb-2'>\r\n                    <Card.Body>\r\n                      <h3 className='mt-2'>{item.fieldofstudy}</h3>\r\n                      <div className='profile-details-subdetails'>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-building fa-fw' /> {item.school}\r\n                        </p>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-graduation-cap fa-fw' />{' '}\r\n                          {item.degree}\r\n                        </p>\r\n                        <p className='text-muted'>\r\n                          <i className='fa fa-calendar fa-fw' />{' '}\r\n                          <Moment format='MM/DD/YY'>{item.from}</Moment> -{' '}\r\n                          {item.current && 'Current'}\r\n                          {item.to && (\r\n                            <Moment format='MM/DD/YY'>{item.to}</Moment>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <p className='mt-2'>{item.description}</p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n        {key === '#socials' && (\r\n          <React.Fragment>\r\n            <h1>Socials and Contact Infos</h1>\r\n            <ListGroup className='mt-3'>\r\n              {userDetails.email && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className='float-right'\r\n                    href={`mailto:${userDetails.email}`}\r\n                  >\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-envelope-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{userDetails.email}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.facebook && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.facebook}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-facebook-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.facebook}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.linkedin && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.linkedin}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-linkedin-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.linkedin}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.twitter && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.twitter}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-twitter-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.twitter}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.youtube && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right' href={social.youtube}>\r\n                    <i className='fa fa-external-link fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-youtube-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.youtube}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditProfile\\index.js",["213","214"],"import React, { useState, useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Form, Button, Nav } from 'react-bootstrap';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\nimport EditProfileDetails from '../../components/EditProfileDetails';\r\nimport NewExperience from '../../components/NewExperience';\r\nimport NewEducation from '../../components/NewEducation';\r\n\r\nconst EditProfile = (props) => {\r\n  const { history } = props;\r\n  const { hash } = history.location;\r\n\r\n  const [key, setKey] = useState(hash);\r\n\r\n  const { profileDetails, loading } = useSelector((state) => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Fetching data...' />\r\n  ) : (\r\n    <Main>\r\n      {profileDetails && (\r\n        <React.Fragment>\r\n          <Button className='mb-3' href='/profile' variant='outline-primary'>\r\n            <i className='fa fa-chevron-left fa-fw' />\r\n            Back\r\n          </Button>\r\n          <Nav\r\n            className='profile-details-nav'\r\n            activeKey={key}\r\n            onSelect={(key) => setKey(key)}\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  key === '#profile-details'\r\n                    ? 'nav-active text-primary'\r\n                    : 'text-muted'\r\n                }\r\n                eventKey='#profile-details'\r\n              >\r\n                Profile Details\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  key === '#experience'\r\n                    ? 'nav-active text-primary'\r\n                    : 'text-muted'\r\n                }\r\n                eventKey='#experience'\r\n              >\r\n                Experience\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  key === '#education'\r\n                    ? 'nav-active text-primary'\r\n                    : 'text-muted'\r\n                }\r\n                eventKey='#education'\r\n              >\r\n                Education\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {key === '#profile-details' && (\r\n            <EditProfileDetails profileDetails={profileDetails} />\r\n          )}\r\n          {key === '#experience' && <NewExperience />}\r\n          {key === '#education' && <NewEducation />}\r\n        </React.Fragment>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EditProfileDetails\\index.js",["215"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProfile } from '../../actions/profileAction';\r\nimport AlertDismissable from '../Alert';\r\n\r\nconst EditProfileDetails = (props) => {\r\n  const { profileDetails } = props;\r\n  const [values, setValues] = useState({\r\n    location: '',\r\n    website: '',\r\n    company: '',\r\n    status: '',\r\n    bio: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    twitter: '',\r\n    youtube: '',\r\n  });\r\n\r\n  const {\r\n    location,\r\n    website,\r\n    company,\r\n    status,\r\n    bio,\r\n    skills,\r\n    githubusername,\r\n    facebook,\r\n    linkedin,\r\n    twitter,\r\n    youtube,\r\n  } = values;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      location: !profileDetails ? '' : profileDetails.location,\r\n      company: !profileDetails ? '' : profileDetails.company,\r\n      website: !profileDetails ? '' : profileDetails.website,\r\n      status: !profileDetails ? '' : profileDetails.status,\r\n      bio: !profileDetails ? '' : profileDetails.bio,\r\n      skills: !profileDetails ? '' : profileDetails.skills.join(', '),\r\n      githubusername: !profileDetails ? '' : profileDetails.githubusername,\r\n      facebook: !profileDetails ? '' : profileDetails.social.facebook,\r\n      linkedin: !profileDetails ? '' : profileDetails.social.linkedin,\r\n      twitter: !profileDetails ? '' : profileDetails.social.twitter,\r\n      youtube: !profileDetails ? '' : profileDetails.social.youtube,\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile(values));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className='mb-5 mt-5'>Edit Main Details</h1>\r\n      <AlertDismissable />\r\n      <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Group>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            name='location'\r\n            type='text'\r\n            value={location}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company</Form.Label>\r\n          <Form.Control\r\n            name='company'\r\n            type='text'\r\n            value={company}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Website</Form.Label>\r\n          <Form.Control\r\n            name='website'\r\n            type='text'\r\n            value={website}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Status</Form.Label>\r\n          <Form.Control\r\n            name='status'\r\n            type='text'\r\n            value={status}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Bio</Form.Label>\r\n          <Form.Control\r\n            name='bio'\r\n            as='textarea'\r\n            value={bio}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Skills</Form.Label>\r\n          <Form.Control\r\n            name='skills'\r\n            type='text'\r\n            value={skills}\r\n            onChange={handleChange}\r\n            // required={true}\r\n          />\r\n        </Form.Group>\r\n        <hr />\r\n        <h3 className='mb-3'>Socials</h3>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>https://github.com/</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Github username'\r\n              name='githubusername'\r\n              type='text'\r\n              value={githubusername}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-facebook-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Facebook account url'\r\n              name='facebook'\r\n              type='text'\r\n              value={facebook}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-linkedin-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter LinkedIn account url'\r\n              name='linkedin'\r\n              type='text'\r\n              value={linkedin}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-twitter-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Twitter account url'\r\n              name='twitter'\r\n              type='text'\r\n              value={twitter}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fa fa-youtube-square fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Youtube account url'\r\n              name='youtube'\r\n              type='text'\r\n              value={youtube}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Button variant='primary' type='submit'>\r\n          Save Changes\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditProfileDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewExperience\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewEducation\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\postReducer.js",["216"],"import {\r\n  POST_BEGIN,\r\n  POST_END,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POSTS_SUCCESS,\r\n  POSTS_FAIL,\r\n  UPDATE_LIKE_SUCCESS,\r\n} from '../constants/postConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  postDetails: null,\r\n  posts: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case POST_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case POST_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case POST_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postDetails: payload.postDetails,\r\n      };\r\n    case POST_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postDetails: null,\r\n      };\r\n    case POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: payload.posts,\r\n      };\r\n    case POSTS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: [],\r\n      };\r\n    case UPDATE_LIKE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        postDetails: { ...state.postDetails, likes: payload.postLikes },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\postConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\postAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Posts\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\uiStateAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\uiStateConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\uiStateReducer.js",["217"],"import {\r\n  ALERT_SET,\r\n  ALERT_HIDE,\r\n  GET_CURRENT_PAGE,\r\n} from '../constants/uiStateConstants';\r\n\r\nconst initialState = {\r\n  alertType: null,\r\n  alertMsg: '',\r\n  alertShow: false,\r\n  currentPage: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ALERT_SET:\r\n      return {\r\n        ...state,\r\n        alertType: payload.alertType,\r\n        alertMsg: payload.alertMsg,\r\n        alertShow: true,\r\n      };\r\n    case ALERT_HIDE:\r\n      return {\r\n        ...state,\r\n        alertType: null,\r\n        alertMsg: '',\r\n        alertShow: false,\r\n      };\r\n    case GET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: payload,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\PostDetails\\index.js",["218"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostDetailsFooter\\index.js",["219","220"],"import React, { useEffect, useState } from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../actions/postAction';\r\nimport PostComment from '../PostComment';\r\n\r\nconst PostDetailsFooter = (props) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [showComment, handleComment] = useState(false);\r\n\r\n  const { postDetails, userDetails } = props;\r\n  const { _id, likes, comments } = postDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const hasLiked = likes.find((item) => item.user === userDetails._id)\r\n      ? true\r\n      : false;\r\n    setLiked(hasLiked);\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    if (liked) {\r\n      dispatch(unlikePost(_id));\r\n    } else {\r\n      dispatch(likePost(_id));\r\n    }\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Post Comment Modal */}\r\n      <PostComment\r\n        comments={comments}\r\n        userDetails={userDetails}\r\n        showComment={showComment}\r\n        handleComment={handleComment}\r\n      />\r\n      <ButtonGroup vertical className='post-footer-btn-group mr-3 mt-5'>\r\n        <Button variant='link' onClick={() => handleLike()}>\r\n          {' '}\r\n          <i\r\n            className={\r\n              liked ? 'fa fa-heart fa-fw fa-2x' : 'far fa-heart fa-fw fa-2x'\r\n            }\r\n          />{' '}\r\n        </Button>\r\n        <Button variant='link'>\r\n          {likes.length !== 0 && (\r\n            <span>\r\n              {likes.length} {likes.length !== 1 ? 'Likes' : 'Like'}\r\n            </span>\r\n          )}\r\n        </Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup vertical className='post-footer-btn-group ml-3 mr-3 mt-5'>\r\n        <Button variant='link' onClick={() => handleComment(!showComment)}>\r\n          {' '}\r\n          <i className='far fa-comment-alt fa-fw fa-2x' />{' '}\r\n        </Button>\r\n        <Button variant='link'>\r\n          {comments.length !== 0 && (\r\n            <span>\r\n              {comments.length} {comments.length !== 1 ? 'Comments' : 'Comment'}\r\n            </span>\r\n          )}\r\n        </Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup vertical className='post-footer-btn-group ml-3 mr-3 mt-5'>\r\n        <Button variant='link'>\r\n          {' '}\r\n          <i className='far fa-bookmark fa-fw fa-2x' />{' '}\r\n        </Button>\r\n        <Button variant='link'>\r\n          {/* {likes.length !== 0 && (\r\n                <span>\r\n                  {likes.length}{' '}\r\n                  {likes.length !== 1 ? 'Likes' : 'Like'}\r\n                </span>\r\n              )} */}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetailsFooter;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostComment\\index.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":16,"column":11,"nodeType":"227","messageId":"228","endLine":16,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":16,"column":6,"nodeType":"231","endLine":16,"endColumn":8,"suggestions":"232"},{"ruleId":"229","severity":1,"message":"230","line":12,"column":6,"nodeType":"231","endLine":12,"endColumn":8,"suggestions":"233"},{"ruleId":"229","severity":1,"message":"230","line":28,"column":6,"nodeType":"231","endLine":28,"endColumn":8,"suggestions":"234"},{"ruleId":"229","severity":1,"message":"230","line":32,"column":6,"nodeType":"231","endLine":32,"endColumn":8,"suggestions":"235"},{"ruleId":"225","severity":1,"message":"236","line":1,"column":8,"nodeType":"227","messageId":"228","endLine":1,"endColumn":9},{"ruleId":"237","severity":1,"message":"238","line":15,"column":1,"nodeType":"239","endLine":51,"endColumn":2},{"ruleId":"225","severity":1,"message":"240","line":3,"column":3,"nodeType":"227","messageId":"228","endLine":3,"endColumn":11},{"ruleId":"229","severity":1,"message":"230","line":26,"column":6,"nodeType":"231","endLine":26,"endColumn":8,"suggestions":"241"},{"ruleId":"225","severity":1,"message":"242","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":73,"column":15,"nodeType":"245","messageId":"246","endLine":75,"endColumn":67},{"ruleId":"237","severity":1,"message":"238","line":19,"column":1,"nodeType":"239","endLine":73,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":17,"column":6,"nodeType":"231","endLine":17,"endColumn":8,"suggestions":"247"},{"ruleId":"225","severity":1,"message":"248","line":6,"column":3,"nodeType":"227","messageId":"228","endLine":6,"endColumn":12},{"ruleId":"225","severity":1,"message":"249","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":14},{"ruleId":"229","severity":1,"message":"230","line":24,"column":6,"nodeType":"231","endLine":24,"endColumn":8,"suggestions":"250"},{"ruleId":"229","severity":1,"message":"251","line":54,"column":6,"nodeType":"231","endLine":54,"endColumn":8,"suggestions":"252"},{"ruleId":"237","severity":1,"message":"238","line":17,"column":1,"nodeType":"239","endLine":64,"endColumn":2},{"ruleId":"237","severity":1,"message":"238","line":14,"column":1,"nodeType":"239","endLine":41,"endColumn":2},{"ruleId":"229","severity":1,"message":"253","line":21,"column":6,"nodeType":"231","endLine":21,"endColumn":8,"suggestions":"254"},{"ruleId":"225","severity":1,"message":"255","line":4,"column":23,"nodeType":"227","messageId":"228","endLine":4,"endColumn":34},{"ruleId":"229","severity":1,"message":"256","line":22,"column":6,"nodeType":"231","endLine":22,"endColumn":8,"suggestions":"257"},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'pathname' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["260"],["261"],["262"],["263"],"'e' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'AUTH_END' is defined but never used.",["264"],"'useEffect' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["265"],"'CardGroup' is defined but never used.","'Form' is defined but never used.",["266"],"React Hook useEffect has a missing dependency: 'profileDetails'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["268"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'likes' and 'userDetails._id'. Either include them or remove the dependency array.",["269"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"270","fix":"272"},{"desc":"270","fix":"273"},{"desc":"270","fix":"274"},{"desc":"270","fix":"275"},{"desc":"270","fix":"276"},{"desc":"270","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [dispatch]",{"range":"284","text":"285"},{"range":"286","text":"285"},{"range":"287","text":"285"},{"range":"288","text":"285"},{"range":"289","text":"285"},{"range":"290","text":"285"},{"range":"291","text":"285"},"Update the dependencies array to be: [profileDetails]",{"range":"292","text":"293"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"294","text":"295"},"Update the dependencies array to be: [likes, userDetails._id]",{"range":"296","text":"297"},[448,450],"[dispatch]",[341,343],[861,863],[1021,1023],[979,981],[630,632],[863,865],[1620,1622],"[profileDetails]",[758,760],"[dispatch, match.params.id]",[722,724],"[likes, userDetails._id]"]